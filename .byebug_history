q
source_options.model_class
source_options
House.new(results.first)
House
results
self
c
table_name
self.table_name
self
q
self
c
source_options.table_name
through_options.model_class.table_name
self
q
through_options.primary_key
through_options.table_name
through_options.model_class.table_name
source_options.primary_key
source_options.model_class.table_name
source_options.foreign_key
through_options.model_class.table_name
source_options.table_name
source_options
source_options.table_name
source_options.model_class
source_options.class_name
source_options.class_name.table_name
source_options.class_name
source_options
source_name
q
through_options
options
through_options
self
through_options.primary_key
through_options
through_options.model_class.table_name
through_options
source_options.model_class.table_name
source_options.model_class
through_options
source_options
source_options.model_class.table_name
through_options.model_class.table_name
source_options
source_options.model_class.table_name
source_options.model_class
source_options.class_name.table_name
source_options.class_name
source_options.class_name.model_class
source_options = through_options.model_class.assoc_options[source_name]
source_options
through_options
through_options.model_class.table_name
through_options = self.assoc_options[through_name]
Human.table_name
Human.assoc_options
through_options.model_class
through_options.module_class
through_options
through_options = self.assoc_options[through_name]
through_name
through_options
Human.assoc_options
Human.assoc_option
self.assoc_options[through_name]
through_options
self
Human.all
Human
self.assoc_options[through_name]
self.class
self.assoc_options
source_name
through_name
name
self
q
c
q
self.assoc_options[:human].foreign_key
self.assoc_options[:human]
self.assoc_options
self
q
TempClass.assoc_options
self
self.class
TempClass
TempClas
self
q
self
q
self
q
self
q
self
name
self
q
self
q
self
q
self.assoc_options
q
self
assoc_options
self.assoc_options
q
self.assoc_options
q
self.assoc_options
q
self.assoc_options
self
exit
self.assoc_options
self.assoc_options.merge!(name: options)
self.assoc_options
self.assoc_options[name] = options
self.assoc_options[name]
self.assoc_options[name] += options
self.assoc_options
assoc_options
assoc_options[name] += options
options.class_name
options
options.model_class
options
options.
options.model_class
options.module_class
options
self
self.assoc_options.merge(options)
options
self.assoc_options
self
q
Cat.all
self
self.first
self.belongs_to
self.methods
self.options
self
q
self
exit
options.model_class.where(options.foreign_key => self.send(options.primary_key))
options.model_class.where(options.foreign_key => self.send(options.primary_key)
options.model_class
options
self.id
self._id
self._
self
options.primary_key
options
id
options.foreign_key
options.model_class
options
owner_id
self
send(:owner_id)
options
options.model_class
options
name
self
q
self
q
options = HasManyOptions.new(name, self.to_s, options)
options = HasManyOptions.new(name, self, options)
self
options
options = HasManyOptions.new(name, self.class, options)
options
self
c
self
c
q
send(options.foreign_key)
options.foreign_key
options
self
self.foreign_key
self
options
foreign_key
c
q
bel_options
q
options
name
Breakfast
self.name
self
self.class.options
self.class
self
@options
q
@options
Cat.all
self
q
clear
0x00000003528e30
Cat.all
Human
@options
c
@options
c
@options.model_class
Human.all
Human
@options
exit
n
exit
@options.model_class
@options.class_name
@options
self
Human
Cat
Cat.all
Cat.methods
Cat.class
Cat
Cat.all
Cat.find(1)
breakfast
self
human
Human
@options
@options.model_class
@options
n
self
n
